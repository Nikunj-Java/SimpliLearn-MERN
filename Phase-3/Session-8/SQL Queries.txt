

***************************************************************************
MYSQL Queries
***************************************************************************
1.get the list of all databases
	> show databases
2. Create Database
	> create database name_of_your_databse
3. use the newly created databse
	> use name_of_your_databse
4. create table in database
	>create table eproduct(id bigint primary key auto_increment,name varchar(100),price decimal(10,2),date_added timestamp default now());

5. get all the tables in a databse;
	> show tables
6. get the description of table
	> describe table_name
7. insert record in database;
	> insert into eproduct(name,price) value("Apple",80000);
	> insert into eproduct(name,price) value("Lenoveo ThinkPad",120000);
	> insert into eproduct(name,price) value("Acer Laptop",75000);
	> insert into eproduct(name,price) value("Vio Laptop",69000);
	> insert into eproduct(name,price) value("Samsung",34000);
8. retrieve all products 
	> select * from eproduct;
9. retrirve the product by id(filter by query)
	> select * from eproduct where id=3;
	> select * from eproduct where name="Apple";

10. Update the record
	> update eproduct set name="Apple Mac Book Air" where id=1;
	> update eproduct set name="Samsung Galaxy Ultra" where id=5;
11. Delete record
	> delete from eproduct where id=5;
	> delete from eproduct where name="Vio Laptop";
12. delete Entire table	
	> drop table eproduct;

13. Inserting Multiple Records
	> insert into eproduct(name,price) value("Apple",180000),("Android",50000),("Samsung",99000);

14. filter by query
	> select * from eproduct order by date_added ASC;
	> select * from eproduct order by date_added DESC;
	> select * from eproduct order by id ASC;
	> select * from eproduct order by id DESC;

	lets create another table	
	
	>create table students(id bigint primary key auto_increment,name varchar(100),age int,grade decimal(10,2),major varchar(50));
	lets insert some records
	> insert into students(name,age,grade,major) values ('Alice',20,3.5,'Physics'),('Bob',22,3.7,'Chemistry'),('Charlie',22,3.2,'Mathematics'),('Diana',23,3.8,'Mathematics');

	filter using ORDER BY
	> select * from students ORDER BY grade DESC
15. DISTINCT QUERY
	> SELECT DISTINCT major FROM students;

16. Use of COUNT in MYSQL
	> select major,COUNT(*) from students GROUP BY major;

17. TCL COMMANDS (TRANSACTION CONTROL COMMANDS) are used to manage databse transaction and ensures data integrity. These commands allows you to commit, rollback and control transaction points.


	A. let's understand with the help of below table:
		> create table accounts(id int auto_increment primary key, name varchar(50), balance decimal(10,2));
	B. insert records
		> insert into accounts (name,balance) values('Nikunj Soni',1000.00),('Alex Jhon',500.00);
	C. START TRANSACTION
		> START TRANSACTION
	D. update accounts set balance=balance-200 where name='Nikunj Soni';
	E. update accounts set balance=balance+200 where name='Alex Jhon';
	F. commit;
	
	G. Create Save Point for Rollback the Transaction
		> SAVEPOINT sp1;
		> update accounts set balance=balance-50.00 where name='Nikunj Soni';
		> rollback to sp1;

18. working with SubQueries   In DATABASE;

	> create table courses(course_id int auto_increment primary key, course_name varchar(100),instructor varchar(100));
	> create table students(student_id int auto_increment primary key,name varchar(100), major varchar(100));
	> create table enrollments(enrollment_id int auto_increment primary key, student_id int, course_id int, foreign key(student_id) references student(student_id),foreign key(course_id) references courses(course_id));
	
	Lets Insert Some data
	> insert into students(name,major) values('Alice','Computer Science'),('Bob','Mathematics');
	> insert into courses(course_name,instructor) values('Database System','Nikunj Soni'),('Calculus','Dr.Jones');

	let's insert data with sub queries
	 
	> select s.name from students s;
	> select c.course_name from courses s;
	> select * from students s  join courses c on c.course_id=s.student_id;



to open mysql in LAB: sudo mysql -u root

	